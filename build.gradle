plugins {
    id 'java'
    id 'war'
    id 'io.freefair.lombok' version '8.10'
    id 'org.liquibase.gradle' version '2.2.0'
    id 'jacoco'
}

group 'org.alexprokopiev'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

ext {}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
}

dependencies {
    compileOnly('jakarta.servlet:jakarta.servlet-api:5.0.0')
    implementation 'org.hibernate.orm:hibernate-core:6.6.0.Final'
    implementation 'jakarta.servlet.jsp.jstl:jakarta.servlet.jsp.jstl-api:3.0.0'
    implementation 'org.glassfish.web:jakarta.servlet.jsp.jstl:3.0.1'
    implementation 'org.apache.commons:commons-lang3:3.14.0'
    implementation 'org.postgresql:postgresql:42.7.4'
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.17.1'
    implementation 'com.fasterxml.jackson.core:jackson-core:2.17.1'
    implementation 'com.fasterxml.jackson.core:jackson-annotations:2.17.1'
    implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.17.1'
    implementation 'org.mapstruct:mapstruct:1.6.0'
    implementation 'org.projectlombok:lombok-mapstruct-binding:0.2.0'
    annotationProcessor 'org.mapstruct:mapstruct-processor:1.6.0'
    implementation 'org.liquibase:liquibase-core:4.29.0'
    implementation 'org.apache.tomcat:tomcat-catalina:11.0.0-M26'
    implementation 'com.ibatis:ibatis2-common:2.1.7.597'

    testImplementation 'jakarta.servlet:jakarta.servlet-api:5.0.0'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.10.2'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.10.2'
    testImplementation platform('org.junit:junit-bom:5.10.0')
    testImplementation 'org.junit.jupiter:junit-jupiter:5.10.0'
    testImplementation 'org.junit.jupiter:junit-jupiter-params:5.10.2'
    testImplementation 'org.mockito:mockito-core:5.12.0'
    testImplementation 'org.mockito:mockito-junit-jupiter:5.12.0'
    testImplementation 'org.testcontainers:postgresql:1.20.1'

    implementation 'org.apache.logging.log4j:log4j-api:2.23.1'
    implementation 'org.apache.logging.log4j:log4j-core:2.23.1'
    implementation 'p6spy:p6spy:3.9.1'

    liquibaseRuntime 'org.liquibase:liquibase-core:4.29.0'
    liquibaseRuntime 'info.picocli:picocli:4.7.5'
    liquibaseRuntime 'org.postgresql:postgresql:42.7.4'
}

liquibase {
    activities {
        main {
            changelogFile "src/main/resources/db/changelog/changelog.xml"
            url "jdbc:postgresql://localhost:5432/todo_app"
            username "alexprokopiev"
            password "admin"
        }
    }
}

test {
    useJUnitPlatform()
    finalizedBy jacocoTestReport
}

jacoco {
    toolVersion = "0.8.9"
    reportsDirectory = layout.buildDirectory.dir('customJacocoReportDir')
}

check {
    dependsOn jacocoTestCoverageVerification
}

jacocoTestReport {
    dependsOn test // tests are required to run before generating the report
    reports {
        xml.required = true
        csv.required = true
        html.outputLocation = layout.buildDirectory.dir('jacocoHtml')
    }
    afterEvaluate {
        classDirectories.setFrom(files(classDirectories.files.collect {
            fileTree(dir: it, exclude: [
                    "constants/*",
                    "controller/*",
                    "mapper/*",
                    "model/*",
                    "utils/*"
            ])
        }))
    }
}

jacocoTestCoverageVerification {
    violationRules {
        rule {
            element = 'CLASS'
            excludes = [
                    'constants.*',
                    'controller.*',
                    'mapper.*',
                    'model.*',
                    'utils.*'
            ]
            limit {
                minimum = 0.9
            }
        }
    }
}